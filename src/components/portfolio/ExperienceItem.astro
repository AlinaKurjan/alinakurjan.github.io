---
interface Props {
  title: string;
  company: string;
  description: string;
  link?: string;
  date: string;
  supervisors?: string[];
}

const { title, company, description, link, date, supervisors } = Astro.props;
---

<div
  class="relative mx-12 pb-12 grid md:grid-cols-5 md:gap-10 before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-pink-200/50 dark:before:border-purple-400/20 before:content-['']"
>
  <div class="pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span
        class="absolute -left-[42px] text-5xl text-pink-400 dark:text-purple-400 rounded-full drop-shadow-[0px_0px_8px_rgba(219,112,147,0.5)] dark:drop-shadow-[0px_0px_8px_rgba(168,85,247,0.5)]"
        >&bull;</span
      >
      <h3
        class="text-xl font-bold text-pink-500 dark:text-purple-400"
      >
        {title}
      </h3>
      <h4 class="text-xl font-semibold text-zinc-700 dark:text-zinc-200">
        {company}
      </h4>
      <time datetime={date} class="text-sm text-zinc-600/80 dark:text-zinc-300/80">
        {date}
      </time>
    </div>
  </div>
  <div
    class="flex flex-col gap-2 pb-4 text-zinc-600 dark:text-zinc-300 md:col-span-3"
  >
    <div set:html={description} />
    {supervisors && supervisors.length > 0 && (
      <div class="mt-2 text-sm text-zinc-500 dark:text-zinc-400">
        <span class="font-semibold text-zinc-700 dark:text-zinc-200">Supervisors:</span>
        <ul class="list-disc list-inside mt-1">
          {supervisors.map((name) => (
            <li>{name}</li>
          ))}
        </ul>
      </div>
    )}
  </div>
</div>
